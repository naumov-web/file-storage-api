swagger: "2.0"
info:
  title: File storage API
  description: Docs for file storage API
  version: 1.0.0
schemes:
  - http
host: 127.0.0.1:31080
basePath: /api

securityDefinitions:
  JWT:
    type: apiKey
    in: header
    name: Authorization

paths:

  /v1/auth:
    post:
      tags:
        - auth
      summary: Authorize user
      description: Authorize user via email and password
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: header
          type: string
          name: X-Locale
          enum:
            - ru
            - en
        - name: LoginRequestBody
          in: body
          description: Login user request body
          required: true
          schema:
            $ref: "#/definitions/LoginRequestModel"
      responses:
        200:
          description: Successful operation
          schema:
            $ref: "#/definitions/LoginSuccessResponseModel"
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ForbiddenResponseModel"
        422:
          description: Validation failed
          schema:
            $ref: "#/definitions/ValidationFailedResponseModel"

  /v1/account/user:
    get:
      tags:
        - user
      summary: Get current user info
      description: Get info about user via authorization header
      security:
        - JWT: []
      produces:
        - application/json
      parameters:
        - in: header
          type: string
          name: X-Locale
          enum:
            - ru
            - en
        - in: header
          name: Authorization
          required: true
          type: string
      responses:
        200:
          description: Successful operation
          schema:
            $ref: "#/definitions/GetUserResponseModel"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponseModel"
    put:
      tags:
        - user
      summary: Update current user info
      description: Update current user info partialy
      security:
        - JWT: [ ]
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: header
          type: string
          name: X-Locale
          enum:
            - ru
            - en
        - in: header
          name: Authorization
          required: true
          type: string
        - name: UpdateUserRequestBody
          in: body
          description: Update user request body
          required: true
          schema:
            $ref: "#/definitions/UpdateUserRequestModel"
      responses:
        200:
          description: Successful operation
          schema:
            $ref: "#/definitions/SimpleSuccessResponseModel"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponseModel"
        422:
          description: Validation failed
          schema:
            $ref: "#/definitions/ValidationFailedResponseModel"

  /v1/account/files:
    get:
      tags:
        - file
      summary: Get user files
      description: Get files for current user
      security:
        - JWT: [ ]
      produces:
        - application/json
      parameters:
        - in: header
          type: string
          name: X-Locale
          enum:
            - ru
            - en
        - in: header
          name: Authorization
          required: true
          type: string
        - in: "query"
          name: "limit"
          type: "integer"
          description: "Limit of items in response"
        - in: "query"
          name: "offset"
          type: "integer"
          description: "Offset of items in response"
        - in: "query"
          name: "sortBy"
          type: "string"
          description: "Sort by column"
          enum:
            - id
            - name
            - mime
            - size
            - description
        - in: "query"
          name: "sortDirection"
          type: "string"
          description: "Sort direction"
          enum:
            - asc
            - desc
      responses:
        200:
          description: Successful operation
          schema:
            $ref: "#/definitions/GetUserFilesResponseModel"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponseModel"
        422:
          description: Validation failed
          schema:
            $ref: "#/definitions/ValidationFailedResponseModel"
    post:
      tags:
        - file
      summary: Create file
      description: Create file for current user
      security:
        - JWT: [ ]
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: header
          type: string
          name: X-Locale
          enum:
            - ru
            - en
        - in: header
          name: Authorization
          required: true
          type: string
        - name: CreateUserFileRequestBody
          in: body
          description: Create user file request body
          required: true
          schema:
            $ref: "#/definitions/CreateUserFileRequestModel"
      responses:
        200:
          description: Successful operation
          schema:
            $ref: "#/definitions/SimpleSuccessResponseModel"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponseModel"
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ForbiddenResponseModel"
        422:
          description: Validation failed
          schema:
            $ref: "#/definitions/ValidationFailedResponseModel"

  /v1/account/files/{file}:
    delete:
      tags:
        - file
      summary: Delete file
      description: Delete specific file for current user
      security:
        - JWT: [ ]
      produces:
        - application/json
      parameters:
        - in: header
          type: string
          name: X-Locale
          enum:
            - ru
            - en
        - in: header
          name: Authorization
          required: true
          type: string
        - in: path
          name: file
          required: true
          type: number
      responses:
        200:
          description: Successful operation
          schema:
            $ref: "#/definitions/SimpleSuccessResponseModel"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponseModel"
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ForbiddenResponseModel"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/NotFoundResponseModel"

  /v1/account/files/{file}/links:
    post:
      tags:
        - link
      summary: Create link
      description: Create link for specific file
      security:
        - JWT: [ ]
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: header
          type: string
          name: X-Locale
          enum:
            - ru
            - en
        - in: header
          name: Authorization
          required: true
          type: string
        - in: path
          name: file
          required: true
          type: number
        - name: CreateLinkRequestBody
          in: body
          description: Create link request body
          required: true
          schema:
            $ref: "#/definitions/CreateLinkRequestModel"
      responses:
        200:
          description: Successful operation
          schema:
            $ref: "#/definitions/CreateLinkSuccessResponseModel"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponseModel"
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ForbiddenResponseModel"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/NotFoundResponseModel"
        422:
          description: Validation failed
          schema:
            $ref: "#/definitions/ValidationFailedResponseModel"

  /v1/admin/invitations:
    post:
      tags:
        - invitation
      summary: Create invitation for user
      description: Create invitation for user via email
      security:
        - JWT: [ ]
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: header
          type: string
          name: X-Locale
          enum:
            - ru
            - en
        - in: header
          name: Authorization
          required: true
          type: string
        - name: InviteUserRequestBody
          in: body
          description: Invite user request body
          required: true
          schema:
            $ref: "#/definitions/InviteUserRequestModel"
      responses:
        200:
          description: Successful operation
          schema:
            $ref: "#/definitions/SimpleSuccessResponseModel"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponseModel"
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ForbiddenResponseModel"
        422:
          description: Validation failed
          schema:
            $ref: "#/definitions/ValidationFailedResponseModel"

  /v1/invitations/confirm:
    get:
      tags:
        - invitation
      summary: Confirm invitation
      description: Confirm specific invitation by code
      parameters:
        - in: query
          name: code
          required: true
          type: string
      responses:
        301:
          description: Redirect to login or error page

  /v1/files/{linkCode}:
    get:
      tags:
        - file
      summary: Download file
      description: Download file by link code
      produces:
        - application/octet-stream
      parameters:
        - in: path
          name: linkCode
          required: true
          type: string
      responses:
        301:
          description: Redirect to page if file doesn't exist or link expired

  /v1/handbooks:
    get:
      tags:
        - handbook
      summary: Get handbooks
      description: Get all handbooks
      produces:
        - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: "#/definitions/GetHandbooksResponseModel"

definitions:

  # Login models

  LoginRequestModel:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
      password:
        type: string

  LoginSuccessResponseModel:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
      token:
        type: string

  # Get user model

  GetUserResponseModel:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
      user:
        $ref: "#/definitions/UserResponseModel"

  # Update user model

  UpdateUserRequestModel:
    type: object
    required:
      - name
    properties:
      name:
        type: string
      password:
        type: string

  # Create file model

  CreateUserFileRequestModel:
    type: object
    required:
      - file
    properties:
      file:
        $ref: "#/definitions/CreateFileRequestModel"
      description:
        type: string

  # Get files models

  GetUserFilesResponseModel:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
      items:
        type: array
        items:
          $ref: "#/definitions/FileResponseModel"
      count:
        type: integer

  # Create link model

  CreateLinkRequestModel:
    type: object
    required:
      - typeId
    properties:
      typeId:
        type: integer
      expiredAt:
        type: string

  CreateLinkSuccessResponseModel:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
      url:
        type: string

  # Get handbooks model

  GetHandbooksResponseModel:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
      handbooks:
        $ref: "#/definitions/HandbooksResponseModel"

  HandbooksResponseModel:
    type: object
    properties:
      linkTypes:
        type: array
        items:
          $ref: "#/definitions/DefaultHandbookItemResponseModel"

  # Admin / Invite user model

  InviteUserRequestModel:
    type: object
    required:
      - email
      - expiredAt
    properties:
      email:
        type: string
      password:
        type: string
      name:
        type: string
      expiredAt:
        type: string

  # Common models

  SimpleSuccessResponseModel:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string

  UnauthorizedResponseModel:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string

  ForbiddenResponseModel:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string

  NotFoundResponseModel:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string

  ValidationFailedResponseModel:
    type: object
    properties:
      errors:
        type: object

  UserResponseModel:
    type: object
    properties:
      id:
        type: integer
      email:
        type: string
      name:
        type: string
      roles:
        type: array
        items:
          $ref: "#/definitions/RoleResponseModel"

  RoleResponseModel:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      systemName:
        type: string

  CreateFileRequestModel:
    type: object
    required:
      - name
      - mime
      - content
    properties:
      name:
        type: string
      mime:
        type: string
      content:
        type: string

  DefaultHandbookItemResponseModel:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string

  FileResponseModel:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      mime:
        type: string
      size:
        type: integer
      description:
        type: string
      links:
        type: array
        items:
          $ref: "#/definitions/LinkResponseModel"

  LinkResponseModel:
    type: object
    properties:
      id:
        type: integer
      type:
        $ref: "#/definitions/DefaultHandbookItemResponseModel"
      url:
        type: string
      expiredAt:
        type: string
      isEnabled:
        type: boolean
